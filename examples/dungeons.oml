vocabulary <https://example.com/dungeons#> as dnd {
    // Imports
    extends <http://www.w3.org/2000/01/rdf-schema/> as rdfs

    extends <http://www.w3.org/2001/XMLSchema#> as xsd

    /* Basic Aspects of Dungeons and Dragons */

    aspect Dungeon

    aspect Monster

    /* Properties of monsters */

    scalar Health :> xsd:positiveInteger [
        minInclusive 1
    ]

    scalar ChallengeRating :> xsd:positiveInteger [
        minInclusive 0
        maxInclusive 30
    ]

    scalar property hasHealth [
        domain Monster
        range Health
        functional
    ]

    scalar property hasCR [
        domain Monster
        range ChallengeRating
        functional
    ]

    /* Relations between dungeons and monsters */
    
    @rdfs:comment "A dungeon can contain monsters"
    relation entity Contains [
        from Dungeon
        to Monster
        forward contains
        reverse isContainedBy
        functional
        inverse functional
    ]

    /* Specifications of draconic monsters and their habitats */

    aspect Dragon :> Monster

    enumerated scalar Age [
        "Wyrmling",
        "Young",
        "Adult",
        "Ancient",
        "Greatwyrm"
    ]

    scalar property hasAge [
        domain Dragon
        range Age
        functional
    ]

    aspect ChromaticDragon :> Dragon

    enumerated scalar Color [
        "Black",
        "Blue",
        "Green",
        "Red",
        "White"
    ]

    scalar property hasColor [
        domain ChromaticDragon
        range Color
        functional
    ]

    aspect AdultDragon :> Dragon [
        restricts scalar property hasHealth to exactly 1
        restricts scalar property hasCR to exactly 1
        restricts scalar property hasAge to "Adult"
    ]

    concept AdultWhiteDragon :> AdultDragon, ChromaticDragon [
        restricts scalar property hasHealth to 200
        restricts scalar property hasCR to 13
        restricts scalar property hasColor to "White"
    ]

    concept AdultBlueDragon :> AdultDragon, ChromaticDragon [
        restricts scalar property hasHealth to 225
        restricts scalar property hasCR to 16
        restricts scalar property hasColor to "Blue"
    ]

    concept Kobold :> Monster [
        restricts scalar property hasHealth to 5
        restricts scalar property hasCR to 0.125
    ]

    aspect DragonLair :> Dungeon [
        restricts some relation contains to Dragon
    ]

    concept WhiteDragonLair :> DragonLair [
        restricts some relation contains to AdultWhiteDragon
    ]
}