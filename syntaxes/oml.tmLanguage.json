{
  "name": "oml",
  "scopeName": "source.oml",
  "fileTypes": [
    ".oml"
  ],
  "patterns": [
    {
      "name": "entity.section.oml",
      "match": "<[^>\\s#]+[#\/]>"
    },
    {
      "name": "constant.language.oml",
      "match": "\\b(true|false)\\b"
    },
    {
      "include": "#comments"
    },
    {
      "match": "\\b((?:scalar|structured|annotation)\\s+property)\\s+([a-zA-z_][\\w\\-\\.$]*)(?:\\s*(:>?)\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*))?)?)?)?)?\\b",
      "captures": {
        "1": {"name": "storage.type.oml"},
        "2": {"name": "variable.object.property.oml"},
        "3": {"name": "keyword.control.oml"},
        "4": {"name": "variable.object.property.oml"},
        "5": {"name": "variable.object.property.oml"},
        "6": {"name": "variable.object.property.oml"},
        "7": {"name": "variable.object.property.oml"},
        "8": {"name": "variable.object.property.oml"}
      }
    },
    {
      "match": "\\b(aspect|concept|ci|entity|ri|scalar|structure)\\s+(?!property)([a-zA-z_][\\w\\-\\.$]*)(?:\\s*(:>?)\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*)(?:\\s*,\\s*([a-zA-z_][\\w\\-\\.$]*))?)?)?)?)?\\b",
      "captures": {
        "1": {"name": "storage.type.oml"},
        "2": {"name": "entity.name.type.oml"},
        "3": {"name": "keyword.control.oml"},
        "4": {"name": "entity.name.type.oml"},
        "5": {"name": "entity.name.type.oml"},
        "6": {"name": "entity.name.type.oml"},
        "7": {"name": "entity.name.type.oml"},
        "8": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(forward|reverse)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "storage.type.oml"},
        "2": {"name": "entity.name.function.oml"}
      }
    },
    {
      "match": "\\b(restricts\\s+(?:all|some))\\s+(scalar|structured)\\s+(property)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "storage.type.oml"},
        "4": {"name": "variable.object.property.oml"},
        "5": {"name": "keyword.control.oml"},
        "6": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(restricts\\s+(?:all|some))\\s+(relation)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "entity.name.function.oml"},
        "4": {"name": "keyword.control.oml"},
        "5": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(restricts)\\s+(scalar|structured)\\s+(property)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\s+(max|min|exactly)\\s+\\d+\\s+([a-zA-z_][\\w\\-\\.$]*)?\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "storage.type.oml"},
        "4": {"name": "variable.object.property.oml"},
        "5": {"name": "keyword.control.oml"},
        "6": {"name": "keyword.control.oml"},
        "7": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(restricts)\\s+(relation)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\s+(max|min|exactly)\\s+\\d+\\s+([a-zA-z_][\\w\\-\\.$]*)?\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "entity.name.function.oml"},
        "4": {"name": "keyword.control.oml"},
        "5": {"name": "keyword.control.oml"},
        "6": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(restricts)\\s+(scalar|structured)\\s+(property)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "storage.type.oml"},
        "4": {"name": "variable.object.property.oml"},
        "5": {"name": "keyword.control.oml"}
      }
    },
    {
      "match": "\\b(restricts)\\s+(relation)\\s+([a-zA-z_][\\w\\-\\.$]*)\\s+(to)\\b",
      "captures": {
        "1": {"name": "keyword.control.oml"},
        "2": {"name": "storage.type.oml"},
        "3": {"name": "entity.name.function.oml"},
        "4": {"name": "keyword.control.oml"}
      }
    },
    {
      "match": "\\b(domain|range|from|to)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "variable.object.property.oml"},
        "2": {"name": "entity.name.type.oml"}
      }
    },
    {
      "name": "storage.type.oml",
      "match": "\\b(annotation|aspect|ci|concept|description|entity|enumerated|forward|property|ref|relation|reverse|ri|rule|scalar|structure|structured|vocabulary)\\b"
    },
    {
      "name": "storage.modifier.oml",
      "match": "\\b(bundle)\\b"
    },
    {
      "name": "variable.object.property.oml",
      "match": "\\b(asymmetric|domain|from|functional|inverse|irreflexive|key|language|length|maxExclusive|maxInclusive|maxLength|minExclusive|minInclusive|minLength|pattern|range|reflexive|symmetric|transitive)\\b"
    },
    {
      "name": "keyword.control.oml",
      "match": "\\b(all|as|differentFrom|enumerates|exactly|extends|includes|max|min|restricts|sameAs|some|to|uses)\\b"
    },
    {
      "name": "string.quoted.triple.oml",
      "begin": "\"\"\"",
      "end": "\"\"\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    {
      "name": "string.quoted.triple.oml",
      "begin": "'''",
      "end": "'''",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    {
      "name": "string.quoted.double.oml",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    {
      "name": "string.quoted.single.oml",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.oml",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.oml"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.oml"
            }
          }
        },
        {
          "name": "comment.line.oml",
          "begin": "//",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.oml"
            }
          },
          "end": "(?=$)"
        }
      ]
    },
    "string-character-escape": {
      "name": "constant.character.escape.oml",
      "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    }
  }
}
