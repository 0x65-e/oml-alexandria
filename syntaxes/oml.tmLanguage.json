{
  "name": "oml",
  "scopeName": "source.oml",
  "fileTypes": [
    ".oml"
  ],
  "patterns": [
    {
      "name": "entity.section.oml",
      "match": "<[^>\\s#]+[#\/]>"
    },
    {
      "name": "constant.language.oml",
      "match": "\\b(true|false)\\b"
    },
    {
      "include": "#comments"
    },
    {
      "match": "\\b(aspect|concept|ci|relation entity|ri)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "storage.type.oml"},
        "2": {"name": "entity.name.type.oml"}
      }
    },
    {
      "match": "\\b(forward|reverse)\\s+([a-zA-z_][\\w\\-\\.$]*)\\b",
      "captures": {
        "1": {"name": "storage.type.oml"},
        "2": {"name": "entity.name.function.oml"}
      }
    },
    {
      "name": "storage.type.oml",
      "match": "\\b(aspect|concept|ci|relation|entity|ri|structure|forward|reverse|vocabulary|description|enumerated|scalar|property|annotation|structured)\\b"
    },
    {
      "name": "storage.modifier.oml",
      "match": "\\b(bundle)\\b"
    },
    {
      "name": "keyword.control.oml",
      "match": "\\b(all|as|asymmetric|differentFrom|domain|enumerates|exactly|extends|from|functional|includes|inverse|irreflexive|key|language|length|max|maxExclusive|maxInclusive|maxLength|min|minExclusive|minInclusive|minLength|pattern|range|ref|reflexive|relation|restricts|rule|sameAs|some|symmetric|to|transitive|uses)\\b"
    },
    {
      "name": "string.quoted.double.oml",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    {
      "name": "string.quoted.single.oml",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.oml",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.oml"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.oml"
            }
          }
        },
        {
          "name": "comment.line.oml",
          "begin": "//",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.oml"
            }
          },
          "end": "(?=$)"
        }
      ]
    },
    "string-character-escape": {
      "name": "constant.character.escape.oml",
      "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    }
  }
}
